#! /usr/bin/perl

# Copyright (C) 2015 Stephan Kulow <coolo@suse.com>

# This program is free software; you can redistribute it
# and/or modify it under the same terms as Perl itself.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

use strict;
use warnings;
use XML::Simple;
use Data::Dumper;
use Compress::Zlib;
use version;

require CPAN::Meta::Requirements;
use File::Temp qw/tempdir/;

# https://build.opensuse.org/status/project/devel:languages:perl
my $xml = XMLin('/tmp/dlp')->{package};

my $modpath = glob("~/.cpan/sources/modules");
my $details = "02packages.details.txt.gz";
chdir($modpath) || die "call cpan once to create $modpath";
system("wget -qm -nd http://www.cpan.org/modules/$details");

my %upstream;
open(DETAILS, "zcat $modpath/$details|");
while ( <DETAILS> ) {
    chomp;
    if (m!^(\S+)\s+([\w\.]+)\s+(\S*)!m) {
	eval { $upstream{$1} = [version->parse($2), $3]; }
    }
}
close(DETAILS);

my $requests = 0;

for my $pkg (sort keys %$xml) {
    next unless $pkg =~ m,^perl-,;
    my $ups = $pkg;
    $ups =~ s,^perl-,,;
    $ups =~ s,-,::,g;
    next unless  defined($upstream{$ups}[0]);
    my $obs_version;
    eval { $obs_version = version->parse($xml->{$pkg}->{version}); };
    next unless $obs_version;
    my $older = $obs_version < $upstream{$ups}[0];
    next unless $older;
    print "PKG $pkg " . $obs_version . " $ups " . $upstream{$ups}[0] . " " . ($older ? 'OLDER' : 'NEWER') .  "\n";
    my $tempdir = tempdir; # ( CLEANUP => 1 );
    chdir($tempdir);
    system("osc branch -c -f devel:languages:perl $pkg devel:languages:perl:autoupdate") == 0
      or next;
    chdir("devel:languages:perl:autoupdate/$pkg") || die "can't chdir";
    for my $tar (glob("*.tar*")) {
	unlink($tar);
    }
    system("wget -q http://search.cpan.org/CPAN/authors/id/$upstream{$ups}[1]");
    system("~coolo/prod/cpanspec/cpanspec -f --old-file .osc/*.tar* *.tar*") == 0
      or next;
    system("osc addremove") == 0
      or next;
    system("osc ci -mupdate") == 0
      or next;
    system("osc sr -m update --clean < /dev/null");
    print "SHELL $tempdir\n";
    chdir("/tmp");
    exit(1) if ($requests++ > 10);
}
